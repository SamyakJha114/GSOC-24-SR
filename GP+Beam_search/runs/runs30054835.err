/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+Beam_search/main.py:45: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(config.model_weights_path)["state_dict"])
Traceback (most recent call last):
  File "/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+Beam_search/main.py", line 68, in <module>
    main(config, i)
  File "/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+Beam_search/main.py", line 58, in main
    run_gp(toolbox, points, seed_expr,pset)
  File "/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+Beam_search/gp.py", line 134, in run_gp
    pop, log = algorithms.eaSimple(pop, toolbox, cxpb, mutpb, ngen, stats=stats, halloffame=hof, verbose=True)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/s/samyak09/.local/perlmutter/python-3.11/lib/python3.11/site-packages/deap/algorithms.py", line 165, in eaSimple
    offspring = toolbox.select(population, len(population))
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+Beam_search/gp.py", line 108, in <lambda>
    toolbox.register("select", lambda individuals, k: e_lexicase_selection(individuals, k, points)) 
                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+Beam_search/gp.py", line 76, in e_lexicase_selection
    errors = [abs(evalSymbReg(ind, [point])[0]) for ind in remaining]
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+Beam_search/gp.py", line 76, in <listcomp>
    errors = [abs(evalSymbReg(ind, [point])[0]) for ind in remaining]
                  ^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: evalSymbReg() missing 1 required positional argument: 'toolbox'
srun: error: nid008381: task 0: Exited with exit code 1
srun: Terminating StepId=30054835.0
