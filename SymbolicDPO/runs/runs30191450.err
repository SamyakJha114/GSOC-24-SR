/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/main.py:54: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(path)["state_dict"])
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/main.py:55: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  reference_model.load_state_dict(torch.load(path)["state_dict"])
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
/global/common/software/nersc/pe/conda-envs/24.1.0/python-3.11/nersc-python/lib/python3.11/site-packages/numpy/core/_methods.py:173: RuntimeWarning: invalid value encountered in subtract
  x = asanyarray(arr - arrmean)
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
  0%|          | 0/40 [00:00<?, ?it/s]  2%|▎         | 1/40 [00:02<01:42,  2.64s/it]  5%|▌         | 2/40 [00:04<01:15,  1.98s/it]  8%|▊         | 3/40 [00:05<01:05,  1.77s/it] 10%|█         | 4/40 [00:07<01:00,  1.68s/it] 12%|█▎        | 5/40 [00:08<00:56,  1.62s/it] 15%|█▌        | 6/40 [00:10<00:54,  1.59s/it] 18%|█▊        | 7/40 [00:11<00:51,  1.57s/it] 20%|██        | 8/40 [00:13<00:49,  1.56s/it] 22%|██▎       | 9/40 [00:14<00:47,  1.55s/it] 25%|██▌       | 10/40 [00:18<01:04,  2.14s/it] 28%|██▊       | 11/40 [00:21<01:14,  2.55s/it] 30%|███       | 12/40 [00:23<01:02,  2.24s/it] 32%|███▎      | 13/40 [00:24<00:54,  2.03s/it] 35%|███▌      | 14/40 [00:26<00:48,  1.88s/it] 38%|███▊      | 15/40 [00:29<00:52,  2.10s/it] 40%|████      | 16/40 [00:31<00:54,  2.28s/it] 42%|████▎     | 17/40 [00:34<00:53,  2.34s/it] 45%|████▌     | 18/40 [00:36<00:52,  2.38s/it] 48%|████▊     | 19/40 [00:39<00:49,  2.37s/it] 50%|█████     | 20/40 [00:41<00:48,  2.43s/it] 52%|█████▎    | 21/40 [00:43<00:45,  2.42s/it] 55%|█████▌    | 22/40 [00:46<00:44,  2.45s/it] 57%|█████▊    | 23/40 [00:48<00:36,  2.17s/it] 60%|██████    | 24/40 [00:51<00:41,  2.60s/it] 62%|██████▎   | 25/40 [00:54<00:39,  2.67s/it] 65%|██████▌   | 26/40 [00:57<00:37,  2.71s/it] 68%|██████▊   | 27/40 [01:00<00:38,  2.94s/it] 70%|███████   | 28/40 [01:03<00:34,  2.90s/it] 72%|███████▎  | 29/40 [01:05<00:27,  2.49s/it] 80%|████████  | 32/40 [01:07<00:12,  1.53s/it] 82%|████████▎ | 33/40 [01:10<00:12,  1.75s/it] 85%|████████▌ | 34/40 [01:12<00:11,  1.94s/it] 88%|████████▊ | 35/40 [01:14<00:09,  1.84s/it] 90%|█████████ | 36/40 [01:16<00:08,  2.01s/it] 92%|█████████▎| 37/40 [01:18<00:05,  1.88s/it] 95%|█████████▌| 38/40 [01:19<00:03,  1.78s/it] 98%|█████████▊| 39/40 [01:22<00:02,  2.00s/it]100%|██████████| 40/40 [01:24<00:00,  2.18s/it]100%|██████████| 40/40 [01:24<00:00,  2.12s/it]
/global/homes/s/samyak09/.local/perlmutter/python-3.11/lib/python3.11/site-packages/torch/optim/lr_scheduler.py:60: UserWarning: The verbose parameter is deprecated. Please use get_last_lr() to access the learning rate.
  warnings.warn(
  0%|          | 0/10 [00:00<?, ?it/s]/global/homes/s/samyak09/.local/perlmutter/python-3.11/lib/python3.11/site-packages/torch/nn/functional.py:5193: UserWarning: Support for mismatched key_padding_mask and attn_mask is deprecated. Use same type for both instead.
  warnings.warn(
 10%|█         | 1/10 [02:55<26:19, 175.53s/it] 20%|██        | 2/10 [05:43<22:49, 171.23s/it] 30%|███       | 3/10 [08:31<19:48, 169.83s/it] 40%|████      | 4/10 [11:19<16:54, 169.00s/it] 50%|█████     | 5/10 [14:07<14:02, 168.45s/it] 60%|██████    | 6/10 [16:54<11:12, 168.17s/it] 70%|███████   | 7/10 [19:42<08:23, 167.96s/it] 80%|████████  | 8/10 [22:29<05:35, 167.81s/it] 90%|█████████ | 9/10 [25:17<02:47, 167.70s/it]100%|██████████| 10/10 [28:04<00:00, 167.62s/it]100%|██████████| 10/10 [28:04<00:00, 168.47s/it]
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
  0%|          | 0/40 [00:00<?, ?it/s]  2%|▎         | 1/40 [00:02<01:53,  2.92s/it]  5%|▌         | 2/40 [00:04<01:24,  2.22s/it]  8%|▊         | 3/40 [00:06<01:13,  1.99s/it] 10%|█         | 4/40 [00:08<01:07,  1.89s/it] 12%|█▎        | 5/40 [00:09<01:04,  1.83s/it] 15%|█▌        | 6/40 [00:11<01:00,  1.79s/it] 18%|█▊        | 7/40 [00:13<00:58,  1.77s/it] 20%|██        | 8/40 [00:15<00:56,  1.76s/it] 22%|██▎       | 9/40 [00:17<01:05,  2.10s/it] 25%|██▌       | 10/40 [00:20<01:08,  2.28s/it] 28%|██▊       | 11/40 [00:22<01:01,  2.11s/it] 30%|███       | 12/40 [00:25<01:05,  2.32s/it] 32%|███▎      | 13/40 [00:27<01:05,  2.44s/it] 35%|███▌      | 14/40 [00:30<01:07,  2.61s/it] 38%|███▊      | 15/40 [00:33<01:07,  2.68s/it] 40%|████      | 16/40 [00:36<01:05,  2.72s/it] 42%|████▎     | 17/40 [00:40<01:11,  3.09s/it] 45%|████▌     | 18/40 [00:43<01:04,  2.95s/it] 48%|████▊     | 19/40 [00:45<00:59,  2.85s/it] 50%|█████     | 20/40 [00:48<00:55,  2.79s/it] 52%|█████▎    | 21/40 [00:51<00:52,  2.77s/it] 55%|█████▌    | 22/40 [00:53<00:49,  2.76s/it] 57%|█████▊    | 23/40 [00:57<00:51,  3.05s/it] 60%|██████    | 24/40 [01:00<00:48,  3.01s/it] 62%|██████▎   | 25/40 [01:03<00:43,  2.92s/it] 65%|██████▌   | 26/40 [01:04<00:35,  2.56s/it] 68%|██████▊   | 27/40 [01:07<00:33,  2.61s/it] 70%|███████   | 28/40 [01:10<00:32,  2.71s/it] 72%|███████▎  | 29/40 [01:13<00:29,  2.71s/it] 75%|███████▌  | 30/40 [01:16<00:27,  2.79s/it] 78%|███████▊  | 31/40 [01:19<00:25,  2.84s/it] 80%|████████  | 32/40 [01:21<00:22,  2.79s/it] 82%|████████▎ | 33/40 [01:24<00:19,  2.74s/it] 85%|████████▌ | 34/40 [01:27<00:16,  2.70s/it] 88%|████████▊ | 35/40 [01:29<00:13,  2.71s/it] 90%|█████████ | 36/40 [01:32<00:11,  2.79s/it] 92%|█████████▎| 37/40 [01:35<00:08,  2.80s/it] 95%|█████████▌| 38/40 [01:38<00:05,  2.75s/it] 98%|█████████▊| 39/40 [01:42<00:03,  3.18s/it]100%|██████████| 40/40 [01:46<00:00,  3.40s/it]100%|██████████| 40/40 [01:46<00:00,  2.66s/it]
  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [03:09<28:26, 189.63s/it] 20%|██        | 2/10 [06:19<25:19, 189.90s/it] 30%|███       | 3/10 [09:29<22:09, 189.94s/it] 40%|████      | 4/10 [12:39<18:59, 189.92s/it] 50%|█████     | 5/10 [15:49<15:49, 189.92s/it] 60%|██████    | 6/10 [18:59<12:39, 189.91s/it] 70%|███████   | 7/10 [22:09<09:29, 189.91s/it] 80%|████████  | 8/10 [25:19<06:19, 189.91s/it] 90%|█████████ | 9/10 [28:29<03:09, 189.92s/it]100%|██████████| 10/10 [31:39<00:00, 189.93s/it]100%|██████████| 10/10 [31:39<00:00, 189.91s/it]
  0%|          | 0/40 [00:00<?, ?it/s]  2%|▎         | 1/40 [00:01<00:48,  1.25s/it]  5%|▌         | 2/40 [00:02<00:47,  1.25s/it]  8%|▊         | 3/40 [00:03<00:46,  1.24s/it] 10%|█         | 4/40 [00:04<00:44,  1.24s/it] 12%|█▎        | 5/40 [00:06<00:43,  1.24s/it] 15%|█▌        | 6/40 [00:07<00:42,  1.24s/it] 18%|█▊        | 7/40 [00:08<00:40,  1.24s/it] 20%|██        | 8/40 [00:09<00:39,  1.24s/it] 22%|██▎       | 9/40 [00:11<00:38,  1.25s/it] 25%|██▌       | 10/40 [00:12<00:37,  1.25s/it] 28%|██▊       | 11/40 [00:13<00:36,  1.25s/it] 30%|███       | 12/40 [00:14<00:35,  1.25s/it] 32%|███▎      | 13/40 [00:16<00:33,  1.25s/it] 35%|███▌      | 14/40 [00:18<00:40,  1.55s/it] 38%|███▊      | 15/40 [00:20<00:43,  1.74s/it] 40%|████      | 16/40 [00:22<00:45,  1.88s/it] 42%|████▎     | 17/40 [00:25<00:45,  1.97s/it] 45%|████▌     | 18/40 [00:26<00:38,  1.76s/it] 48%|████▊     | 19/40 [00:28<00:40,  1.91s/it] 50%|█████     | 20/40 [00:30<00:40,  2.03s/it] 52%|█████▎    | 21/40 [00:33<00:41,  2.19s/it] 55%|█████▌    | 22/40 [00:35<00:39,  2.21s/it] 57%|█████▊    | 23/40 [00:37<00:37,  2.23s/it] 60%|██████    | 24/40 [00:40<00:36,  2.25s/it] 62%|██████▎   | 25/40 [00:41<00:29,  1.96s/it] 65%|██████▌   | 26/40 [00:42<00:24,  1.75s/it] 68%|██████▊   | 27/40 [00:44<00:24,  1.88s/it] 70%|███████   | 28/40 [00:47<00:23,  1.95s/it] 72%|███████▎  | 29/40 [00:49<00:22,  2.01s/it] 75%|███████▌  | 30/40 [00:51<00:20,  2.04s/it] 78%|███████▊  | 31/40 [00:53<00:18,  2.05s/it] 80%|████████  | 32/40 [00:55<00:16,  2.07s/it] 82%|████████▎ | 33/40 [00:57<00:14,  2.07s/it] 85%|████████▌ | 34/40 [00:59<00:12,  2.14s/it] 88%|████████▊ | 35/40 [01:01<00:09,  1.91s/it] 90%|█████████ | 36/40 [01:02<00:06,  1.72s/it] 92%|█████████▎| 37/40 [01:04<00:05,  1.89s/it] 95%|█████████▌| 38/40 [01:06<00:03,  1.71s/it] 98%|█████████▊| 39/40 [01:07<00:01,  1.58s/it]100%|██████████| 40/40 [01:08<00:00,  1.48s/it]100%|██████████| 40/40 [01:08<00:00,  1.72s/it]
  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [02:58<26:47, 178.56s/it] 20%|██        | 2/10 [05:57<23:47, 178.49s/it] 30%|███       | 3/10 [08:55<20:50, 178.63s/it] 40%|████      | 4/10 [11:54<17:52, 178.77s/it] 50%|█████     | 5/10 [14:53<14:54, 178.88s/it] 60%|██████    | 6/10 [17:52<11:55, 178.78s/it] 70%|███████   | 7/10 [20:50<08:55, 178.61s/it] 80%|████████  | 8/10 [23:48<05:57, 178.50s/it] 90%|█████████ | 9/10 [26:46<02:58, 178.31s/it]100%|██████████| 10/10 [29:44<00:00, 178.20s/it]100%|██████████| 10/10 [29:44<00:00, 178.48s/it]
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
  0%|          | 0/40 [00:00<?, ?it/s]  2%|▎         | 1/40 [00:01<01:11,  1.84s/it]  5%|▌         | 2/40 [00:03<01:09,  1.82s/it]  8%|▊         | 3/40 [00:05<01:07,  1.82s/it] 10%|█         | 4/40 [00:07<01:05,  1.81s/it] 12%|█▎        | 5/40 [00:09<01:03,  1.81s/it] 15%|█▌        | 6/40 [00:10<01:01,  1.81s/it] 18%|█▊        | 7/40 [00:12<00:59,  1.81s/it] 20%|██        | 8/40 [00:14<00:57,  1.81s/it] 22%|██▎       | 9/40 [00:18<01:16,  2.46s/it] 25%|██▌       | 10/40 [00:22<01:27,  2.90s/it] 28%|██▊       | 11/40 [00:25<01:22,  2.85s/it] 30%|███       | 12/40 [00:28<01:28,  3.17s/it] 32%|███▎      | 13/40 [00:31<01:23,  3.08s/it] 35%|███▌      | 14/40 [00:34<01:18,  3.01s/it] 38%|███▊      | 15/40 [00:38<01:21,  3.25s/it] 40%|████      | 16/40 [00:41<01:16,  3.17s/it] 42%|████▎     | 17/40 [00:44<01:10,  3.07s/it] 45%|████▌     | 18/40 [00:47<01:05,  3.00s/it] 48%|████▊     | 19/40 [00:49<01:01,  2.95s/it] 50%|█████     | 20/40 [00:53<01:04,  3.21s/it] 52%|█████▎    | 21/40 [00:56<00:58,  3.10s/it] 55%|█████▌    | 22/40 [00:59<00:54,  3.04s/it] 57%|█████▊    | 23/40 [01:02<00:50,  2.99s/it] 60%|██████    | 24/40 [01:05<00:47,  2.99s/it] 62%|██████▎   | 25/40 [01:07<00:39,  2.65s/it] 65%|██████▌   | 26/40 [01:10<00:37,  2.70s/it] 68%|██████▊   | 27/40 [01:12<00:35,  2.71s/it] 70%|███████   | 28/40 [01:15<00:32,  2.72s/it] 72%|███████▎  | 29/40 [01:19<00:33,  3.04s/it] 75%|███████▌  | 30/40 [01:23<00:32,  3.25s/it] 78%|███████▊  | 31/40 [01:24<00:25,  2.84s/it] 80%|████████  | 32/40 [01:28<00:25,  3.13s/it] 82%|████████▎ | 33/40 [01:31<00:21,  3.04s/it] 85%|████████▌ | 34/40 [01:34<00:17,  2.94s/it] 88%|████████▊ | 35/40 [01:39<00:17,  3.51s/it] 90%|█████████ | 36/40 [01:42<00:13,  3.43s/it] 92%|█████████▎| 37/40 [01:45<00:09,  3.28s/it] 95%|█████████▌| 38/40 [01:48<00:06,  3.21s/it] 98%|█████████▊| 39/40 [01:51<00:03,  3.09s/it]100%|██████████| 40/40 [01:53<00:00,  2.75s/it]100%|██████████| 40/40 [01:53<00:00,  2.83s/it]
  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [03:07<28:08, 187.61s/it] 20%|██        | 2/10 [06:15<25:00, 187.55s/it] 30%|███       | 3/10 [09:22<21:51, 187.41s/it] 40%|████      | 4/10 [12:29<18:43, 187.33s/it] 50%|█████     | 5/10 [15:36<15:36, 187.25s/it] 60%|██████    | 6/10 [18:43<12:28, 187.09s/it] 70%|███████   | 7/10 [21:49<09:20, 186.87s/it] 80%|████████  | 8/10 [24:57<06:14, 187.05s/it] 90%|█████████ | 9/10 [28:04<03:07, 187.16s/it]100%|██████████| 10/10 [31:12<00:00, 187.25s/it]100%|██████████| 10/10 [31:12<00:00, 187.22s/it]
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/main.py:54: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(path)["state_dict"])
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/main.py:55: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  reference_model.load_state_dict(torch.load(path)["state_dict"])
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
/global/common/software/nersc/pe/conda-envs/24.1.0/python-3.11/nersc-python/lib/python3.11/site-packages/numpy/core/_methods.py:173: RuntimeWarning: invalid value encountered in subtract
  x = asanyarray(arr - arrmean)
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
/global/common/software/nersc/pe/conda-envs/24.1.0/python-3.11/nersc-python/lib/python3.11/site-packages/numpy/core/_methods.py:176: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)
  0%|          | 0/40 [00:00<?, ?it/s]  2%|▎         | 1/40 [00:02<01:56,  2.99s/it]  5%|▌         | 2/40 [00:05<01:53,  2.99s/it]  8%|▊         | 3/40 [00:08<01:50,  3.00s/it] 10%|█         | 4/40 [00:11<01:48,  3.00s/it] 12%|█▎        | 5/40 [00:15<01:45,  3.01s/it] 15%|█▌        | 6/40 [00:18<01:42,  3.01s/it] 18%|█▊        | 7/40 [00:21<01:39,  3.01s/it] 20%|██        | 8/40 [00:24<01:36,  3.00s/it] 22%|██▎       | 9/40 [00:27<01:33,  3.00s/it] 25%|██▌       | 10/40 [00:30<01:29,  3.00s/it] 28%|██▊       | 11/40 [00:33<01:27,  3.00s/it] 30%|███       | 12/40 [00:36<01:23,  3.00s/it] 32%|███▎      | 13/40 [00:39<01:20,  3.00s/it] 35%|███▌      | 14/40 [00:41<01:17,  3.00s/it] 38%|███▊      | 15/40 [00:44<01:14,  2.99s/it] 40%|████      | 16/40 [00:47<01:11,  2.99s/it] 42%|████▎     | 17/40 [00:50<01:08,  3.00s/it] 45%|████▌     | 18/40 [00:53<01:05,  3.00s/it] 48%|████▊     | 19/40 [00:56<01:02,  2.99s/it] 50%|█████     | 20/40 [00:59<00:59,  3.00s/it] 52%|█████▎    | 21/40 [01:02<00:56,  2.99s/it] 55%|█████▌    | 22/40 [01:05<00:53,  2.99s/it] 57%|█████▊    | 23/40 [01:08<00:50,  3.00s/it] 60%|██████    | 24/40 [01:11<00:47,  3.00s/it] 62%|██████▎   | 25/40 [01:14<00:44,  3.00s/it] 65%|██████▌   | 26/40 [01:17<00:41,  3.00s/it] 68%|██████▊   | 27/40 [01:20<00:38,  3.00s/it] 70%|███████   | 28/40 [01:23<00:35,  2.99s/it] 72%|███████▎  | 29/40 [01:26<00:32,  2.99s/it] 75%|███████▌  | 30/40 [01:29<00:29,  2.99s/it] 78%|███████▊  | 31/40 [01:32<00:26,  2.99s/it] 80%|████████  | 32/40 [01:35<00:23,  2.99s/it] 82%|████████▎ | 33/40 [01:38<00:20,  2.98s/it] 85%|████████▌ | 34/40 [01:41<00:17,  2.98s/it] 88%|████████▊ | 35/40 [01:44<00:14,  2.99s/it] 90%|█████████ | 36/40 [01:47<00:11,  2.98s/it] 92%|█████████▎| 37/40 [01:50<00:08,  2.98s/it] 95%|█████████▌| 38/40 [01:53<00:05,  2.99s/it] 98%|█████████▊| 39/40 [01:56<00:02,  2.99s/it]100%|██████████| 40/40 [01:59<00:00,  2.99s/it]100%|██████████| 40/40 [01:59<00:00,  2.99s/it]
Traceback (most recent call last):
  File "/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/main.py", line 83, in <module>
    main(config, i, args.noise_std,args.beta)
  File "/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/main.py", line 68, in main
    trainer.training_loop()
  File "/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/SymbolicDPOTrainer.py", line 189, in training_loop
    self.train_transformer_dpo(preference_pairs)
  File "/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/SymbolicDPOTrainer.py", line 37, in train_transformer_dpo
    train, test = train_test_split(preference_pairs,test_size = 0.1,random_state = 42)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/common/software/nersc/pe/conda-envs/24.1.0/python-3.11/nersc-python/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 214, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/global/common/software/nersc/pe/conda-envs/24.1.0/python-3.11/nersc-python/lib/python3.11/site-packages/sklearn/model_selection/_split.py", line 2649, in train_test_split
    n_train, n_test = _validate_shuffle_split(
                      ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/common/software/nersc/pe/conda-envs/24.1.0/python-3.11/nersc-python/lib/python3.11/site-packages/sklearn/model_selection/_split.py", line 2305, in _validate_shuffle_split
    raise ValueError(
ValueError: With n_samples=0, test_size=0.1 and train_size=None, the resulting train set will be empty. Adjust any of the aforementioned parameters.
srun: error: nid008449: task 0: Exited with exit code 1
srun: Terminating StepId=30191450.0
