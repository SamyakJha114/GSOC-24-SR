/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/main.py:54: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(path)["state_dict"])
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/main.py:55: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  reference_model.load_state_dict(torch.load(path)["state_dict"])
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
/global/common/software/nersc/pe/conda-envs/24.1.0/python-3.11/nersc-python/lib/python3.11/site-packages/numpy/core/_methods.py:173: RuntimeWarning: invalid value encountered in subtract
  x = asanyarray(arr - arrmean)
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
<string>:1: RuntimeWarning: overflow encountered in scalar multiply
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
<string>:1: RuntimeWarning: overflow encountered in scalar multiply
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
  0%|          | 0/40 [00:00<?, ?it/s]  2%|▎         | 1/40 [00:03<02:01,  3.12s/it]  5%|▌         | 2/40 [00:06<01:57,  3.10s/it]  8%|▊         | 3/40 [00:09<01:54,  3.09s/it] 10%|█         | 4/40 [00:12<01:50,  3.08s/it] 12%|█▎        | 5/40 [00:15<01:47,  3.07s/it] 15%|█▌        | 6/40 [00:18<01:44,  3.07s/it] 18%|█▊        | 7/40 [00:21<01:41,  3.07s/it] 20%|██        | 8/40 [00:23<01:25,  2.68s/it] 22%|██▎       | 9/40 [00:25<01:14,  2.42s/it] 25%|██▌       | 10/40 [00:27<01:07,  2.24s/it] 28%|██▊       | 11/40 [00:28<01:01,  2.12s/it] 30%|███       | 12/40 [00:30<00:57,  2.04s/it] 32%|███▎      | 13/40 [00:32<00:53,  1.98s/it] 35%|███▌      | 14/40 [00:35<01:01,  2.36s/it] 38%|███▊      | 15/40 [00:38<01:02,  2.52s/it] 40%|████      | 16/40 [00:41<01:04,  2.68s/it] 42%|████▎     | 17/40 [00:44<01:04,  2.79s/it] 45%|████▌     | 18/40 [00:47<01:03,  2.86s/it] 48%|████▊     | 19/40 [00:50<01:01,  2.92s/it] 50%|█████     | 20/40 [00:53<00:59,  2.96s/it] 52%|█████▎    | 21/40 [00:55<00:49,  2.63s/it] 55%|█████▌    | 22/40 [00:57<00:43,  2.39s/it] 57%|█████▊    | 23/40 [00:59<00:37,  2.23s/it] 60%|██████    | 24/40 [01:01<00:33,  2.11s/it] 62%|██████▎   | 25/40 [01:03<00:30,  2.03s/it] 65%|██████▌   | 26/40 [01:05<00:27,  1.98s/it] 68%|██████▊   | 27/40 [01:09<00:35,  2.75s/it] 70%|███████   | 28/40 [01:14<00:42,  3.51s/it] 72%|███████▎  | 29/40 [01:17<00:36,  3.36s/it] 75%|███████▌  | 30/40 [01:19<00:29,  2.94s/it] 78%|███████▊  | 31/40 [01:23<00:27,  3.01s/it] 80%|████████  | 32/40 [01:25<00:21,  2.72s/it] 82%|████████▎ | 33/40 [01:27<00:17,  2.52s/it] 85%|████████▌ | 34/40 [01:29<00:14,  2.38s/it] 88%|████████▊ | 35/40 [01:31<00:11,  2.33s/it] 90%|█████████ | 36/40 [01:33<00:09,  2.25s/it] 92%|█████████▎| 37/40 [01:35<00:06,  2.16s/it] 95%|█████████▌| 38/40 [01:39<00:05,  2.72s/it] 98%|█████████▊| 39/40 [01:42<00:02,  2.87s/it]100%|██████████| 40/40 [01:45<00:00,  2.97s/it]100%|██████████| 40/40 [01:45<00:00,  2.65s/it]
/global/homes/s/samyak09/.local/perlmutter/python-3.11/lib/python3.11/site-packages/torch/optim/lr_scheduler.py:60: UserWarning: The verbose parameter is deprecated. Please use get_last_lr() to access the learning rate.
  warnings.warn(
  0%|          | 0/10 [00:00<?, ?it/s]/global/homes/s/samyak09/.local/perlmutter/python-3.11/lib/python3.11/site-packages/torch/nn/functional.py:5193: UserWarning: Support for mismatched key_padding_mask and attn_mask is deprecated. Use same type for both instead.
  warnings.warn(
 10%|█         | 1/10 [03:14<29:07, 194.13s/it] 20%|██        | 2/10 [06:20<25:18, 189.78s/it] 30%|███       | 3/10 [09:27<21:58, 188.31s/it] 40%|████      | 4/10 [12:33<18:45, 187.58s/it] 50%|█████     | 5/10 [15:40<15:36, 187.23s/it] 60%|██████    | 6/10 [18:47<12:28, 187.01s/it] 70%|███████   | 7/10 [21:53<09:20, 186.98s/it] 80%|████████  | 8/10 [25:00<06:13, 186.97s/it] 90%|█████████ | 9/10 [28:07<03:06, 186.81s/it]100%|██████████| 10/10 [31:13<00:00, 186.51s/it]100%|██████████| 10/10 [31:13<00:00, 187.32s/it]
/global/common/software/nersc/pe/conda-envs/24.1.0/python-3.11/nersc-python/lib/python3.11/site-packages/numpy/core/_methods.py:176: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py:75: RuntimeWarning: overflow encountered in scalar power
  sqerrors = ((((func(*x) - y)**2)/len(points)) for x, y in points)
  0%|          | 0/40 [00:00<?, ?it/s]  2%|▎         | 1/40 [00:02<01:52,  2.89s/it]  5%|▌         | 2/40 [00:05<01:49,  2.88s/it]  8%|▊         | 3/40 [00:08<01:46,  2.87s/it] 10%|█         | 4/40 [00:11<01:43,  2.87s/it] 12%|█▎        | 5/40 [00:14<01:43,  2.97s/it] 15%|█▌        | 6/40 [00:16<01:28,  2.60s/it] 18%|█▊        | 7/40 [00:18<01:18,  2.38s/it] 20%|██        | 8/40 [00:20<01:11,  2.22s/it] 22%|██▎       | 9/40 [00:22<01:05,  2.12s/it] 25%|██▌       | 10/40 [00:24<01:01,  2.06s/it] 28%|██▊       | 11/40 [00:26<00:58,  2.01s/it] 30%|███       | 12/40 [00:27<00:54,  1.95s/it] 32%|███▎      | 13/40 [00:29<00:51,  1.92s/it] 35%|███▌      | 14/40 [00:31<00:49,  1.90s/it] 38%|███▊      | 15/40 [00:33<00:47,  1.89s/it] 40%|████      | 16/40 [00:35<00:45,  1.88s/it] 42%|████▎     | 17/40 [00:37<00:43,  1.87s/it] 45%|████▌     | 18/40 [00:40<00:54,  2.46s/it] 48%|████▊     | 19/40 [00:44<01:00,  2.87s/it] 50%|█████     | 20/40 [00:48<01:00,  3.01s/it] 52%|█████▎    | 21/40 [00:52<01:04,  3.41s/it] 55%|█████▌    | 22/40 [00:55<00:58,  3.27s/it] 57%|█████▊    | 23/40 [00:58<00:53,  3.16s/it] 60%|██████    | 24/40 [01:00<00:44,  2.77s/it] 62%|██████▎   | 25/40 [01:02<00:37,  2.50s/it] 65%|██████▌   | 26/40 [01:04<00:36,  2.62s/it] 68%|██████▊   | 27/40 [01:07<00:35,  2.73s/it] 70%|███████   | 28/40 [01:10<00:33,  2.79s/it] 72%|███████▎  | 29/40 [01:15<00:35,  3.20s/it] 75%|███████▌  | 30/40 [01:18<00:31,  3.20s/it] 78%|███████▊  | 31/40 [01:21<00:28,  3.15s/it] 80%|████████  | 32/40 [01:24<00:24,  3.12s/it] 82%|████████▎ | 33/40 [01:27<00:21,  3.09s/it] 85%|████████▌ | 34/40 [01:30<00:18,  3.08s/it] 88%|████████▊ | 35/40 [01:33<00:15,  3.03s/it] 90%|█████████ | 36/40 [01:36<00:11,  2.99s/it] 92%|█████████▎| 37/40 [01:37<00:07,  2.64s/it] 95%|█████████▌| 38/40 [01:40<00:05,  2.73s/it] 98%|█████████▊| 39/40 [01:45<00:03,  3.14s/it]100%|██████████| 40/40 [01:48<00:00,  3.11s/it]100%|██████████| 40/40 [01:48<00:00,  2.70s/it]
  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [03:08<28:16, 188.55s/it] 20%|██        | 2/10 [06:17<25:10, 188.76s/it] 30%|███       | 3/10 [09:26<22:01, 188.77s/it] 40%|████      | 4/10 [12:34<18:52, 188.73s/it] 50%|█████     | 5/10 [15:43<15:42, 188.60s/it] 60%|██████    | 6/10 [18:51<12:34, 188.52s/it] 70%|███████   | 7/10 [22:00<09:25, 188.50s/it] 80%|████████  | 8/10 [25:08<06:17, 188.54s/it] 90%|█████████ | 9/10 [28:17<03:08, 188.52s/it]100%|██████████| 10/10 [31:25<00:00, 188.51s/it]100%|██████████| 10/10 [31:25<00:00, 188.57s/it]
  0%|          | 0/40 [00:00<?, ?it/s]  2%|▎         | 1/40 [00:04<03:01,  4.65s/it]  5%|▌         | 2/40 [00:09<02:55,  4.62s/it]  8%|▊         | 3/40 [00:13<02:50,  4.61s/it] 10%|█         | 4/40 [00:17<02:31,  4.20s/it] 12%|█▎        | 5/40 [00:21<02:19,  3.98s/it] 15%|█▌        | 6/40 [00:25<02:23,  4.22s/it] 18%|█▊        | 7/40 [00:28<02:01,  3.67s/it] 20%|██        | 8/40 [00:30<01:46,  3.31s/it] 22%|██▎       | 9/40 [00:33<01:35,  3.07s/it] 25%|██▌       | 10/40 [00:37<01:38,  3.29s/it] 28%|██▊       | 11/40 [00:39<01:29,  3.09s/it] 30%|███       | 12/40 [00:45<01:53,  4.05s/it] 32%|███▎      | 13/40 [00:52<02:07,  4.71s/it] 35%|███▌      | 14/40 [00:59<02:19,  5.35s/it] 38%|███▊      | 15/40 [01:05<02:20,  5.60s/it] 40%|████      | 16/40 [01:08<02:00,  5.01s/it] 42%|████▎     | 17/40 [01:12<01:45,  4.59s/it] 45%|████▌     | 18/40 [01:16<01:34,  4.30s/it] 48%|████▊     | 19/40 [01:19<01:26,  4.10s/it] 50%|█████     | 20/40 [01:23<01:19,  3.96s/it] 52%|█████▎    | 21/40 [01:28<01:20,  4.25s/it] 55%|█████▌    | 22/40 [01:32<01:14,  4.16s/it] 57%|█████▊    | 23/40 [01:36<01:13,  4.32s/it] 60%|██████    | 24/40 [01:41<01:09,  4.37s/it] 62%|██████▎   | 25/40 [01:45<01:06,  4.41s/it] 65%|██████▌   | 26/40 [01:50<01:03,  4.51s/it] 68%|██████▊   | 27/40 [01:53<00:50,  3.92s/it] 70%|███████   | 28/40 [01:58<00:53,  4.48s/it] 72%|███████▎  | 29/40 [02:02<00:47,  4.31s/it] 75%|███████▌  | 30/40 [02:07<00:43,  4.39s/it] 78%|███████▊  | 31/40 [02:12<00:39,  4.43s/it] 80%|████████  | 32/40 [02:16<00:35,  4.46s/it] 82%|████████▎ | 33/40 [02:21<00:31,  4.48s/it] 85%|████████▌ | 34/40 [02:24<00:25,  4.21s/it] 88%|████████▊ | 35/40 [02:28<00:20,  4.03s/it] 90%|█████████ | 36/40 [02:32<00:16,  4.00s/it] 92%|█████████▎| 37/40 [02:37<00:13,  4.53s/it] 95%|█████████▌| 38/40 [02:40<00:07,  3.96s/it] 98%|█████████▊| 39/40 [02:45<00:04,  4.16s/it]100%|██████████| 40/40 [02:48<00:00,  3.98s/it]100%|██████████| 40/40 [02:48<00:00,  4.22s/it]
  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [03:14<29:07, 194.13s/it] 20%|██        | 2/10 [06:28<25:56, 194.54s/it] 30%|███       | 3/10 [09:43<22:43, 194.73s/it] 40%|████      | 4/10 [12:58<19:29, 194.85s/it] 50%|█████     | 5/10 [16:14<16:15, 195.00s/it] 60%|██████    | 6/10 [19:29<12:59, 195.00s/it] 70%|███████   | 7/10 [22:44<09:44, 194.96s/it] 80%|████████  | 8/10 [25:59<06:29, 194.97s/it] 90%|█████████ | 9/10 [29:13<03:14, 194.88s/it]100%|██████████| 10/10 [32:28<00:00, 194.93s/it]100%|██████████| 10/10 [32:28<00:00, 194.88s/it]
Traceback (most recent call last):
  File "/global/homes/s/samyak09/.local/perlmutter/python-3.11/lib/python3.11/site-packages/deap/gp.py", line 643, in generate
    prim = random.choice(pset.primitives[type_])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/common/software/nersc/pe/conda-envs/24.1.0/python-3.11/nersc-python/lib/python3.11/random.py", line 373, in choice
    raise IndexError('Cannot choose from an empty sequence')
IndexError: Cannot choose from an empty sequence

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/main.py", line 83, in <module>
    main(config, i, args.noise_std,args.beta)
  File "/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/main.py", line 68, in main
    trainer.training_loop()
  File "/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/SymbolicDPOTrainer.py", line 186, in training_loop
    population, stats, hof = run_gp(toolbox, self.points,self.original_points,seed_expr,pset)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/u2/s/samyak09/GSOC-SR/GSOC-24-SR/GP+DPO/gp.py", line 214, in run_gp
    pop, log = algorithms.eaSimple(pop, toolbox, cxpb, mutpb, ngen, stats=stats, halloffame=hof, verbose=True)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/s/samyak09/.local/perlmutter/python-3.11/lib/python3.11/site-packages/deap/algorithms.py", line 168, in eaSimple
    offspring = varAnd(offspring, toolbox, cxpb, mutpb)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/s/samyak09/.local/perlmutter/python-3.11/lib/python3.11/site-packages/deap/algorithms.py", line 79, in varAnd
    offspring[i], = toolbox.mutate(offspring[i])
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/s/samyak09/.local/perlmutter/python-3.11/lib/python3.11/site-packages/deap/gp.py", line 770, in mutUniform
    individual[slice_] = expr(pset=pset, type_=type_)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/s/samyak09/.local/perlmutter/python-3.11/lib/python3.11/site-packages/deap/gp.py", line 590, in genHalfAndHalf
    return method(pset, min_, max_, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/s/samyak09/.local/perlmutter/python-3.11/lib/python3.11/site-packages/deap/gp.py", line 573, in genGrow
    return generate(pset, min_, max_, condition, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/s/samyak09/.local/perlmutter/python-3.11/lib/python3.11/site-packages/deap/gp.py", line 646, in generate
    raise IndexError("The gp.generate function tried to add "
  File "/global/homes/s/samyak09/.local/perlmutter/python-3.11/lib/python3.11/site-packages/deap/gp.py", line 643, in generate
    prim = random.choice(pset.primitives[type_])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/common/software/nersc/pe/conda-envs/24.1.0/python-3.11/nersc-python/lib/python3.11/random.py", line 373, in choice
    raise IndexError('Cannot choose from an empty sequence')
IndexError: The gp.generate function tried to add a primitive of type '<class 'int'>', but there is none available.
srun: error: nid008697: task 0: Exited with exit code 1
srun: Terminating StepId=30174980.0
